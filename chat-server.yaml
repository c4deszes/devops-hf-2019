apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: chat-server
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - devops-chat.mbraptor.tech
    secretName: tls-mbraptor.tech
  rules:
  - host: devops-chat.mbraptor.tech
    http:
      paths:
      - backend:
          serviceName: chat-server
          servicePort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: chat-server
  labels:
    run: chat-server
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: chat-server

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-server
spec:
  selector:
    matchLabels:
      run: chat-server
  replicas: 2
  template:
    metadata:
      labels:
        run: chat-server
    spec:
      serviceAccountName: chat-server-account
      containers:
      - name: chat-server
        image: eu.gcr.io/devops-hf/chat-server:latest
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
             path: /
             port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        livenessProbe:
          httpGet:
             path: /
             port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: chat-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: chat-server
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 50